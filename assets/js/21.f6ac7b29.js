(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{379:function(a,e,r){"use strict";r.r(e);var t=r(42),s=Object(t.a)({},(function(){var a=this,e=a.$createElement,r=a._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[r("h1",{attrs:{id:"genesis-settings-parameters"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#genesis-settings-parameters"}},[a._v("#")]),a._v(" Genesis Settings & Parameters")]),a._v(" "),r("p",[a._v("This document gives a brief explanation of each of the main parameters found in a network's "),r("code",[a._v("genesis.json")]),a._v(". Some parameters have been omitted for brevity.")]),a._v(" "),r("p",[a._v("With the exception of Chain Params, the following parameters are changeable on-chain via governance.")]),a._v(" "),r("p"),r("div",{staticClass:"table-of-contents"},[r("ul",[r("li",[r("a",{attrs:{href:"#chain-params"}},[a._v("Chain Params")])]),r("li",[r("a",{attrs:{href:"#auth-params"}},[a._v("Auth Params")])]),r("li",[r("a",{attrs:{href:"#beacon-params"}},[a._v("Beacon Params")])]),r("li",[r("a",{attrs:{href:"#distribution-params"}},[a._v("Distribution Params")])]),r("li",[r("a",{attrs:{href:"#enterprise-params"}},[a._v("Enterprise Params")])]),r("li",[r("a",{attrs:{href:"#governance-params"}},[a._v("Governance Params")])]),r("li",[r("a",{attrs:{href:"#slashing-params"}},[a._v("Slashing Params")])]),r("li",[r("a",{attrs:{href:"#staking-params"}},[a._v("Staking Params")])]),r("li",[r("a",{attrs:{href:"#wrkchain-params"}},[a._v("WRKChain Params")])])])]),r("p"),a._v(" "),r("h2",{attrs:{id:"chain-params"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#chain-params"}},[a._v("#")]),a._v(" Chain Params")]),a._v(" "),r("ul",[r("li",[r("code",[a._v(".genesis_time")]),r("br"),a._v("\nGenesis block timestamp. E.g. 2020-01-06T12:00:00Z")]),a._v(" "),r("li",[r("code",[a._v(".chain_id")]),r("br"),a._v("\nID of the current chain, E.g. "),r("code",[a._v("FUND-Mainchain-MainNet-v1")])])]),a._v(" "),r("h2",{attrs:{id:"auth-params"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#auth-params"}},[a._v("#")]),a._v(" Auth Params")]),a._v(" "),r("p",[a._v("Auth parameters are changeable via governance")]),a._v(" "),r("ul",[r("li",[r("code",[a._v(".app_state.auth.params.max_memo_characters")]),r("br"),a._v("\nThe maximum number of characters allowed in a Tx memo, e.g. 256")]),a._v(" "),r("li",[r("code",[a._v(".app_state.auth.params.tx_sig_limit")]),r("br"),a._v("\nThe maximum number of permitted signatures on a "),r("code",[a._v("multisig")]),a._v(" Tx. E.g. 7")]),a._v(" "),r("li",[r("code",[a._v(".app_state.auth.params.tx_size_cost_per_byte")]),r("br"),a._v("\nThe gas cost per byte for a Tx. E.g. 10")])]),a._v(" "),r("h2",{attrs:{id:"beacon-params"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#beacon-params"}},[a._v("#")]),a._v(" Beacon Params")]),a._v(" "),r("p",[a._v("Beacon parameters are changeable via governance")]),a._v(" "),r("ul",[r("li",[r("code",[a._v(".app_state.beacon.params.denom")]),r("br"),a._v("\nDenomination used for BEACON fees. E.g. "),r("code",[a._v("nund")])]),a._v(" "),r("li",[r("code",[a._v(".app_state.beacon.params.fee_record")]),r("br"),a._v("\nFee for recording BEACON timestamps, in "),r("code",[a._v("params.denom")]),a._v(", E.g. 1000000000")]),a._v(" "),r("li",[r("code",[a._v(".app_state.beacon.params.fee_register")]),r("br"),a._v("\nOne time fee for registering a BEACON with the network, in "),r("code",[a._v("params.denom")]),a._v(". E.g. 1000000000000")])]),a._v(" "),r("h2",{attrs:{id:"distribution-params"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#distribution-params"}},[a._v("#")]),a._v(" Distribution Params")]),a._v(" "),r("p",[a._v("Distribution parameters are changeable via governance")]),a._v(" "),r("ul",[r("li",[r("code",[a._v(".app_state.distribution.params.base_proposer_reward")]),r("br"),a._v("\nAdditional % of fees etc. given to the block proposer as a bonus. E.g. 0.010000000000000000")]),a._v(" "),r("li",[r("code",[a._v(".app_state.distribution.params.bonus_proposer_reward")]),r("br"),a._v("\nAdditional % of fees etc. given to the block proposer, based on voting metrics calculated with each block. E.g. 0.040000000000000000")]),a._v(" "),r("li",[r("code",[a._v(".app_state.distribution.params.community_tax")]),r("br"),a._v("\nA fixed % of fees sent to the community pool each block. The spending of community pool coins can be decided via governance. E.g. 0.020000000000000000")])]),a._v(" "),r("h2",{attrs:{id:"enterprise-params"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#enterprise-params"}},[a._v("#")]),a._v(" Enterprise Params")]),a._v(" "),r("p",[a._v("Enterprise parameters are changeable via governance")]),a._v(" "),r("ul",[r("li",[r("code",[a._v(".app_state.enterprise.params.decision_time_limit")]),r("br"),a._v("\nThe time (in seconds) after which a raised Enterprise Purchase Order will automatically be rejected if no decision has been made. E.g. 259200")]),a._v(" "),r("li",[r("code",[a._v(".app_state.enterprise.params.denom")]),r("br"),a._v("\nDenomination in which Enterprise FUND will be issued. E.g. nund")]),a._v(" "),r("li",[r("code",[a._v(".app_state.enterprise.params.ent_signers")]),r("br"),a._v("\nComma separated list of wallet addresses authorised to accept/reject Enterprise FUND Purchase Orders.")]),a._v(" "),r("li",[r("code",[a._v(".app_state.enterprise.params.min_Accepts")]),r("br"),a._v("\nMinimum number of "),r("code",[a._v("params.ent_signers")]),a._v(" required to make a decision on a Purchase Order.")])]),a._v(" "),r("h2",{attrs:{id:"governance-params"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#governance-params"}},[a._v("#")]),a._v(" Governance Params")]),a._v(" "),r("p",[a._v("Governance parameters are changeable via governance")]),a._v(" "),r("ul",[r("li",[r("code",[a._v(".app_state.gov.deposit_params.max_deposit_period")]),r("br"),a._v("\nTime in ns in which deposits are required to be made for a proposal. E.g. 1209600000000000\n"),r("code",[a._v(".app_state.gov.deposit_params.min_deposit")]),r("br"),a._v("\nMinumum deposit required in order for a proposal to be valid, and enter the voting period. E.g. 1000000000000nund")]),a._v(" "),r("li",[r("code",[a._v(".app_state.gov.tally_params.quorum")]),r("br"),a._v("\nMinimum percentage of total stake needed to vote for a result to be considered valid. E.g. 0.400000000000000000")]),a._v(" "),r("li",[r("code",[a._v(".app_state.gov.tally_params.threshold")]),r("br"),a._v("\nMinimum proportion of Yes votes for proposal to pass. E.g. 0.500000000000000000")]),a._v(" "),r("li",[r("code",[a._v(".app_state.gov.tally_params.veto")]),r("br"),a._v("\nMinimum value of Veto votes to Total votes ratio for proposal to be vetoed. E.g. 0.334000000000000000")]),a._v(" "),r("li",[r("code",[a._v(".app_state.gov.voting_params.voting_period")]),a._v("\nLength of the voting period in ns. E.g. 1209600000000000")])]),a._v(" "),r("h2",{attrs:{id:"slashing-params"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#slashing-params"}},[a._v("#")]),a._v(" Slashing Params")]),a._v(" "),r("p",[a._v("Slashing parameters are changeable via governance")]),a._v(" "),r("ul",[r("li",[r("code",[a._v(".app_state.slashing.params.downtime_jail_duration")]),r("br"),a._v("\nCooldown period in ns, after being jailed for downtime that a node cannot unjail. E.g. 600000000000")]),a._v(" "),r("li",[r("code",[a._v(".app_state.slashing.params.min_signed_per_window")]),r("br"),a._v("\nmin % of SignedBlocksWindow that must be signed in order to keep EV in pool of active EVs. Below this = jailed. E.g. 0.050000000000000000")]),a._v(" "),r("li",[r("code",[a._v(".app_state.slashing.params.signed_blocks_window")]),r("br"),a._v("\nnumber of blocks to monitor for missed/double sign etc. E.g. 10000")]),a._v(" "),r("li",[r("code",[a._v(".app_state.slashing.params.slash_fraction_double_sign")]),r("br"),a._v("\n% of stake to slash for double signing. E.g. 0.050000000000000000")]),a._v(" "),r("li",[r("code",[a._v(".app_state.slashing.params.slash_fraction_downtime")]),r("br"),a._v("\n% of stakes to slash for downtime\n. E.g. 0.000100000000000000")])]),a._v(" "),r("h2",{attrs:{id:"staking-params"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#staking-params"}},[a._v("#")]),a._v(" Staking Params")]),a._v(" "),r("p",[a._v("Staking parameters are changeable via governance")]),a._v(" "),r("ul",[r("li",[r("code",[a._v(".app_state.staking.params.bond_denom")]),r("br"),a._v("\nStaking denomination. E.g. nund")]),a._v(" "),r("li",[r("code",[a._v(".app_state.staking.params.historical_entries")]),r("br"),a._v("\nThe n most recent historical entries are persisted. E.g. 3")]),a._v(" "),r("li",[r("code",[a._v(".app_state.staking.params.max_entries")]),r("br"),a._v("\nmax simultaneous entries for either unbonding delegation or redelegation (per pair/trio). E.g. 7")]),a._v(" "),r("li",[r("code",[a._v(".app_state.staking.params.max_validators")]),r("br"),a._v("\nMaximum number of active validators in the current pool. E.g. 96")]),a._v(" "),r("li",[r("code",[a._v(".app_state.staking.params.unbonding_time")]),r("br"),a._v("\nduration in ns unbonding takes to complete. E.g. 1814400000000000")])]),a._v(" "),r("h2",{attrs:{id:"wrkchain-params"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#wrkchain-params"}},[a._v("#")]),a._v(" WRKChain Params")]),a._v(" "),r("p",[a._v("WRKChain parameters are changeable via governance")]),a._v(" "),r("ul",[r("li",[r("code",[a._v(".app_state.wrkchain.params.denom")]),r("br"),a._v("\nDenomination used for WRKChain fees. E.g. "),r("code",[a._v("nund")])]),a._v(" "),r("li",[r("code",[a._v(".app_state.wrkchain.params.fee_record")]),r("br"),a._v("\nFee for recording WRKChain hashes, in "),r("code",[a._v("params.denom")]),a._v(", E.g. 1000000000")]),a._v(" "),r("li",[r("code",[a._v(".app_state.wrkchain.params.fee_register")]),r("br"),a._v("\nOne time fee for registering a WRKChain with the network, in "),r("code",[a._v("params.denom")]),a._v(". E.g. 1000000000000")])])])}),[],!1,null,null,null);e.default=s.exports}}]);