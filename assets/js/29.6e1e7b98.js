(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{387:function(a,e,t){"use strict";t.r(e);var s=t(42),n=Object(s.a)({},(function(){var a=this,e=a.$createElement,t=a._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"installing-the-mainchain-software"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installing-the-mainchain-software"}},[a._v("#")]),a._v(" Installing the Mainchain Software")]),a._v(" "),t("p",[a._v("This documentation outlines how to install the Unification Mainchain software, in\norder to participate and interact with any of the Mainchain networks.")]),a._v(" "),t("h4",{attrs:{id:"contents"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[a._v("#")]),a._v(" Contents")]),a._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#installing-the-latest-release-binaries"}},[a._v("Installing the latest release binaries")])]),t("li",[t("a",{attrs:{href:"#building-from-source"}},[a._v("Building from Source")]),t("ul",[t("li",[t("a",{attrs:{href:"#prerequisites"}},[a._v("Prerequisites")])]),t("li",[t("a",{attrs:{href:"#install-go"}},[a._v("Install Go")])]),t("li",[t("a",{attrs:{href:"#build-and-install-the-binaries"}},[a._v("Build and install the binaries")])]),t("li",[t("a",{attrs:{href:"#verify-the-installation"}},[a._v("Verify the installation")])]),t("li",[t("a",{attrs:{href:"#development"}},[a._v("Development")])])])]),t("li",[t("a",{attrs:{href:"#cli-help"}},[a._v("CLI Help")])])])]),t("p"),a._v(" "),t("h2",{attrs:{id:"installing-the-latest-release-binaries"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#installing-the-latest-release-binaries"}},[a._v("#")]),a._v(" Installing the latest release binaries")]),a._v(" "),t("p",[a._v("The latest pre-compiled binaries are available from "),t("a",{attrs:{href:"https://github.com/unification-com/mainchain/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/unification-com/mainchain/releases"),t("OutboundLink")],1),a._v(".")]),a._v(" "),t("ul",[t("li",[a._v("The "),t("code",[a._v("undcli")]),a._v(" binary has been compiled for Linux, OSX and Windows.")]),a._v(" "),t("li",[a._v("The "),t("code",[a._v("und")]),a._v(" binary has been compiled for Linux only.")])]),a._v(" "),t("p",[a._v("Simply download the archives for your OS.")]),a._v(" "),t("p",[a._v("Once downloaded, you can verify the SHA256 checksum against those listed in the release's "),t("code",[a._v("checksums.txt")]),a._v(", for example:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ openssl dgst -sha256 undcli_v1.4.5_linux_x86_64.tar.gz\nSHA256"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("undcli_v1.4.5_linux_x86_64.tar.gz"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 239559182183648379164f5ff0faa0b3fe0e404f5368e1995e56b2269c93ec05\n")])])]),t("p",[a._v("Extract them and copy the binaries to a suitable location - preferably a location in your "),t("code",[a._v("$PATH")]),a._v(" environment variable, for example "),t("code",[a._v("/usr/local/bin")]),a._v(", "),t("code",[a._v("/opt")]),a._v(", etc.")]),a._v(" "),t("p",[a._v("Once installed, verify:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ und version --long\n$ undcli version --long\n")])])]),t("p",[a._v("The output should match the latest release version tag.")]),a._v(" "),t("h2",{attrs:{id:"building-from-source"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#building-from-source"}},[a._v("#")]),a._v(" Building from Source")]),a._v(" "),t("p",[a._v("The Mainchain binaries can also be built from source.")]),a._v(" "),t("h3",{attrs:{id:"prerequisites"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[a._v("#")]),a._v(" Prerequisites")]),a._v(" "),t("p",[t("code",[a._v("git")]),a._v(", "),t("code",[a._v("curl")]),a._v(" and "),t("code",[a._v("make")]),a._v(" are required to build the binaries. "),t("code",[a._v("jq")]),a._v(" is also useful for quickly looking up values in "),t("code",[a._v("genesis.json")])]),a._v(" "),t("p",[a._v("These can all be installed via your package manager:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" jq\n")])])]),t("p",[a._v("or")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" jq\n")])])]),t("h3",{attrs:{id:"install-go"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#install-go"}},[a._v("#")]),a._v(" Install Go")]),a._v(" "),t("p",[t("strong",[a._v("Go 1.13+")]),a._v(" is required to build the Mainchain binaries")]),a._v(" "),t("p",[a._v("Install "),t("code",[a._v("go")]),a._v(" by following the "),t("a",{attrs:{href:"https://golang.org/doc/install",target:"_blank",rel:"noopener noreferrer"}},[a._v("official docs"),t("OutboundLink")],1),a._v(".\nOnce Go is installed, set your "),t("code",[a._v("$PATH")]),a._v(" environment variable:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("mkdir")]),a._v(" -p "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$HOME")]),a._v("/go/bin\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"export PATH='),t("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v(":"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("go "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("env")]),a._v(" GOPATH"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v('/bin"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">>")]),a._v(" ~/.bash_profile\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("source")]),a._v(" ~/.bash_profile\n")])])]),t("h3",{attrs:{id:"build-and-install-the-binaries"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#build-and-install-the-binaries"}},[a._v("#")]),a._v(" Build and install the binaries")]),a._v(" "),t("div",{staticClass:"custom-block warning"},[t("p",{staticClass:"custom-block-title"},[a._v("IMPORTANT")]),a._v(" "),t("p",[a._v("unless you are contributing to Mainchain development, it is recommended you checkout and build from the latest release tag and "),t("strong",[a._v("not")]),a._v(" the "),t("code",[a._v("master")]),a._v(" branch if you intend to connect to a live, public network (e.g. TestNet/MainNet).")])]),a._v(" "),t("p",[a._v("Download the "),t("strong",[a._v("latest")]),a._v(" tagged Mainchain release from\n"),t("a",{attrs:{href:"https://github.com/unification-com/mainchain/releases",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://github.com/unification-com/mainchain/releases"),t("OutboundLink")],1)]),a._v(" "),t("p",[a._v("The "),t("strong",[t("code",[a._v("[latest-release-tag]")])]),a._v(" required for the command below can also be obtained by running:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("curl")]),a._v(" --silent "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"https://api.github.com/repos/unification-com/mainchain/releases/latest"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" -Po "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('\'"tag_name": "\\K.*?(?=")\'')]),a._v("\n")])])]),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("git")]),a._v(" clone -b "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("latest-release-tag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" https://github.com/unification-com/mainchain\n$ "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" mainchain\n$ "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])])]),t("p",[a._v("This will install the two binaries "),t("code",[a._v("und")]),a._v(" and "),t("code",[a._v("undcli")]),a._v(" into your "),t("code",[a._v("$HOME/go/bin")])]),a._v(" "),t("h3",{attrs:{id:"verify-the-installation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#verify-the-installation"}},[a._v("#")]),a._v(" Verify the installation")]),a._v(" "),t("p",[a._v("Run the following commands:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ und version --long\n$ undcli version --long\n")])])]),t("p",[a._v("If they have installed correctly, you should see output similar to the following:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("name: UndMainchain\nserver_name: und\nclient_name: undcli\nversion: "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("1.3")]),a._v(".4\ncommit: 6913d4e349ef99aef9be0dfe3c03e8381dae0d81\nbuild_tags: netgo ledger\ngo: go version go1.13.3 linux/amd64\n")])])]),t("h3",{attrs:{id:"development"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#development"}},[a._v("#")]),a._v(" Development")]),a._v(" "),t("p",[a._v("The included Mainchain "),t("RouterLink",{attrs:{to:"/software/local-devnet.html"}},[a._v("DevNet")]),a._v(" network can be used for development and testing of new features and bug fixes locally. To build the binaries for testing without installing, run:")],1),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("make")]),a._v(" build\n")])])]),t("p",[a._v("This will output the binaries to the "),t("code",[a._v("./build")]),a._v(" directory located in the repository root.")]),a._v(" "),t("p",[a._v("See the "),t("RouterLink",{attrs:{to:"/software/local-devnet.html"}},[a._v("DevNet")]),a._v(" docs for more information about running "),t("strong",[a._v("DevNet")]),a._v(".")],1),a._v(" "),t("h2",{attrs:{id:"cli-help"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cli-help"}},[a._v("#")]),a._v(" CLI Help")]),a._v(" "),t("p",[a._v("Both the "),t("code",[a._v("und")]),a._v(" and "),t("code",[a._v("undcli")]),a._v(" commands can have the "),t("code",[a._v("--help")]),a._v(" flag passed\nto output details on what commands are available, and flags enabled for that\ncommand:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("und --help\nundcli --help\n")])])]),t("p",[a._v("Likewise, the "),t("code",[a._v("--help")]),a._v(" flag can be passed to subcommands, for example:")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("undcli query wrkchain --help\n")])])]),t("h4",{attrs:{id:"next"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#next"}},[a._v("#")]),a._v(" Next")]),a._v(" "),t("p",[a._v("Running "),t("RouterLink",{attrs:{to:"/networks/local-devnet.html"}},[a._v("Devnet")]),a._v(", joining "),t("RouterLink",{attrs:{to:"/networks/join-network.html"}},[a._v("a network")])],1)])}),[],!1,null,null,null);e.default=n.exports}}]);