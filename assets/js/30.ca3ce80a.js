(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{388:function(t,e,n){"use strict";n.r(e);var a=n(42),s=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"light-client-rest"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#light-client-rest"}},[t._v("#")]),t._v(" Light Client/REST")]),t._v(" "),n("p",[t._v("The "),n("code",[t._v("undcli")]),t._v(" binary comes packaged with a full REST capable server, from which the majority of the "),n("code",[t._v("undcli query ...")]),t._v(" and "),n("code",[t._v("undcli tx ...")]),t._v(" commands can also be served.")]),t._v(" "),n("p",[t._v("The REST server is generally useful for third party services such as "),n("a",{attrs:{href:"https://github.com/unification-com/web-wallet",target:"_blank",rel:"noopener noreferrer"}},[t._v("wallets"),n("OutboundLink")],1),t._v(" and "),n("a",{attrs:{href:"https://github.com/unification-com/mainchain-explorer",target:"_blank",rel:"noopener noreferrer"}},[t._v("block explorers"),n("OutboundLink")],1),t._v(". It interacts with, and can be used alongside the "),n("code",[t._v("und")]),t._v(" RPC interface.")]),t._v(" "),n("h4",{attrs:{id:"contents"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#contents"}},[t._v("#")]),t._v(" Contents")]),t._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#prerequisites"}},[t._v("Prerequisites")])]),n("li",[n("a",{attrs:{href:"#running-a-light-client"}},[t._v("Running a light client")])]),n("li",[n("a",{attrs:{href:"#running-an-archive-rpc-node"}},[t._v("Running an Archive RPC node")])])])]),n("p"),t._v(" "),n("h2",{attrs:{id:"prerequisites"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prerequisites"}},[t._v("#")]),t._v(" Prerequisites")]),t._v(" "),n("p",[t._v("Before continuing, ensure you have gone through the following docs:")]),t._v(" "),n("ol",[n("li",[n("RouterLink",{attrs:{to:"/software/installation.html"}},[t._v("Installing the software")])],1),t._v(" "),n("li",[n("RouterLink",{attrs:{to:"/networks/join-network.html"}},[t._v("join a Network")]),t._v(", or "),n("RouterLink",{attrs:{to:"/networks/local-devnet.html"}},[t._v("run DevNet")])],1)]),t._v(" "),n("h2",{attrs:{id:"running-a-light-client"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#running-a-light-client"}},[t._v("#")]),t._v(" Running a light client")]),t._v(" "),n("p",[t._v("The Light Client can be started using the following command:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("undcli rest-server --laddr"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tcp://ip:port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --node "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("tcp://ip:port"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" --chain-id"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("chain_id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),n("p",[t._v("For example:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("undcli rest-server --laddr"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("tcp://localhost:1317 --node tcp://11.22.33.44:26657 --chain-id"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("FUND-Mainchain-TestNet-v8\n")])])]),n("p",[t._v("This will start the light client on your local host listening on "),n("code",[t._v("localhost:1317")]),t._v(", and use the node hosted at "),n("code",[t._v("11.22.33.44:26657")]),t._v(" to source its data and interface with the "),n("code",[t._v("FUND-Mainchain-TestNet-v8")]),t._v(" chain (e.g. broadcast any transactions).")]),t._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),n("p",[t._v("setting the listen address IP to "),n("code",[t._v("0.0.0.0")]),t._v(", e.g. "),n("code",[t._v("--laddr=tcp://0.0.0.0:1317")]),t._v(" will allow any host to connect to your REST server.")])]),t._v(" "),n("p",[t._v("Once running, you can visit "),n("a",{attrs:{href:"http://localhost:1317/swagger-ui/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://localhost:1317/swagger-ui/"),n("OutboundLink")],1),t._v(" to view all of the REST endpoints available.")]),t._v(" "),n("p",[t._v("The full "),n("code",[t._v("undcli rest-server")]),t._v(" command specification can be found "),n("RouterLink",{attrs:{to:"/software/undcli-commands.html#undcli-rest-server"}},[t._v("here")]),t._v(".")],1),t._v(" "),n("h2",{attrs:{id:"running-an-archive-rpc-node"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#running-an-archive-rpc-node"}},[t._v("#")]),t._v(" Running an Archive RPC node")]),t._v(" "),n("p",[t._v('Light Clients are more effective when interfacing with full nodes running in "archive" mode. Nodes running in archive mode do not prune any sync data, and keep a complete transaction event history.')]),t._v(" "),n("p",[t._v("The quickest way to get up and running with an archive node is to configure the pruning option in "),n("code",[t._v("$HOME/.und_mainchain/config/app.toml")]),t._v(":")]),t._v(" "),n("div",{staticClass:"language-toml extra-class"},[n("pre",{pre:!0,attrs:{class:"language-toml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token key property"}},[t._v("pruning")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nothing"')]),t._v("\n")])])]),n("p",[t._v("Then, start the full node as usual using:")]),t._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[t._v("und start\n")])])]),n("p",[t._v("Your light client can then be configured to connect to it via the "),n("code",[t._v("--node")]),t._v(" flag by passing "),n("code",[t._v("tcp://127.0.0.1:26657")]),t._v(" to it.")])])}),[],!1,null,null,null);e.default=s.exports}}]);